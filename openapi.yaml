# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /createDir:
        post:
            tags:
                - UserSvc
            operationId: UserSvc_CreateDir
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.CreateDirRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
    /deleteFiles:
        post:
            tags:
                - UserSvc
            operationId: UserSvc_DeleteFiles
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.DeleteFilesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
    /download/{filename}:
        get:
            tags:
                - UserSvc
            description: rpc Download(DownloadRequest) returns (stream DownloadReply) {
            operationId: UserSvc_Download
            parameters:
                - name: filename
                  in: path
                  required: true
                  schema:
                    type: string
                - name: path
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.DownloadReply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.HelloReply'
    /listFiles:
        get:
            tags:
                - UserSvc
            operationId: UserSvc_ListFiles
            parameters:
                - name: path
                  in: query
                  schema:
                    type: string
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.ListFilesReply'
    /login:
        post:
            tags:
                - UserSvc
            operationId: UserSvc_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
    /register:
        post:
            tags:
                - UserSvc
            operationId: UserSvc_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
    /upload:
        post:
            tags:
                - UserSvc
            description: |-
                rpc GetUser (GetUserRequest) returns (GetUserReply) {
                   option (google.api.http) = {
                     get: "/user/{id}"
                   };
                 }
            operationId: UserSvc_Upload
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UploadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
    /uploadOver:
        post:
            tags:
                - UserSvc
            operationId: UserSvc_UploadOver
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UploadRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CommonReply'
components:
    schemas:
        user.v1.CommonReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: uint32
                reason:
                    type: string
        user.v1.CreateDirRequest:
            type: object
            properties:
                dirname:
                    type: string
                current:
                    type: string
        user.v1.DeleteFilesRequest:
            type: object
            properties:
                path:
                    type: string
                files:
                    type: array
                    items:
                        type: string
        user.v1.DownloadReply:
            type: object
            properties:
                content:
                    type: string
                    format: bytes
        user.v1.FileInfo:
            type: object
            properties:
                name:
                    type: string
                size:
                    type: string
                time:
                    type: string
                type:
                    type: string
        user.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.ListFilesReply:
            type: object
            properties:
                fileInfos:
                    type: array
                    items:
                        $ref: '#/components/schemas/user.v1.FileInfo'
                total:
                    type: string
        user.v1.LoginRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        user.v1.RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                password:
                    type: string
        user.v1.UploadRequest:
            type: object
            properties:
                filename:
                    type: string
                chunk:
                    type: string
                chunkIndex:
                    type: integer
                    format: uint32
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: UserSvc
